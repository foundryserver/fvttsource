# Work flow to build Foundry Images and save them to Digital Ocean Container Registry

name: FVTT CI/CD

on:
  push:
    branches: [main]
env:
  COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
  REGISTRY: registry.digitalocean.com/foundryserver
  #ACTIONS_STEP_DEBUG: false

jobs:
  DOWNLOAD_UNZIP_BUILD_PUSH:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Debugging
        run: |
          # set -x

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Url from Commit Message
        run: |
          # Extract the version number from the commit message by spiting on / and taking the 5th part
          VERSION=$(echo "$COMMIT_MESSAGE" | cut -d'/' -f5)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download FVTT Image
        run: |
          # Download the FVTT image from the URL in the commit message
          wget -q "$COMMIT_MESSAGE" -O fvtt.zip

      - name: Unzip FVTT Image
        run: |
          # Unzip the FVTT image
          unzip -q fvtt.zip -d fvtt

      - name: Add License File
        run: |
          # Write the secret FOUNDRY_LICENSE_json to a file in the fvtt directory
          echo "${{ secrets.FOUNDRY_LICENSE_JSON }}" > fvtt/foundryserver.json

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          password: ${{ secrets.DIGITALOCEAN_PUSH_TOKEN }}

      - name: Build FVTT Image
        uses: docker/build-push-action@v6
        with:
          context: ./fvtt
          push: true
          tags: ${{ env.REGISTRY }}/fvtt:${{ env.VERSION }}
          file: Dockerfile
